
Exercise 7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000004a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000042c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000414  00800200  00800200  000004a0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000510  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000109f  00000000  00000000  000005c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dff  00000000  00000000  0000165f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000600  00000000  00000000  0000245e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000110  00000000  00000000  00002a60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000065e  00000000  00000000  00002b70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000219  00000000  00000000  000031ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000033e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
   6:	00 00       	nop
   8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
  16:	00 00       	nop
  18:	77 c0       	rjmp	.+238    	; 0x108 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	61 c0       	rjmp	.+194    	; 0x108 <__bad_interrupt>
  46:	00 00       	nop
  48:	5f c0       	rjmp	.+190    	; 0x108 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
  52:	00 00       	nop
  54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	49 c0       	rjmp	.+146    	; 0x108 <__bad_interrupt>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	43 c0       	rjmp	.+134    	; 0x108 <__bad_interrupt>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	26 e0       	ldi	r18, 0x06	; 6
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a4 31       	cpi	r26, 0x14	; 20
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	82 d1       	rcall	.+772    	; 0x40a <main>
 106:	90 c1       	rjmp	.+800    	; 0x428 <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <CSwitch>:
 10a:	0f 92       	push	r0
 10c:	1f 92       	push	r1
 10e:	2f 92       	push	r2
 110:	3f 92       	push	r3
 112:	4f 92       	push	r4
 114:	5f 92       	push	r5
 116:	6f 92       	push	r6
 118:	7f 92       	push	r7
 11a:	8f 92       	push	r8
 11c:	9f 92       	push	r9
 11e:	af 92       	push	r10
 120:	bf 92       	push	r11
 122:	cf 92       	push	r12
 124:	df 92       	push	r13
 126:	ef 92       	push	r14
 128:	ff 92       	push	r15
 12a:	0f 93       	push	r16
 12c:	1f 93       	push	r17
 12e:	2f 93       	push	r18
 130:	3f 93       	push	r19
 132:	4f 93       	push	r20
 134:	5f 93       	push	r21
 136:	6f 93       	push	r22
 138:	7f 93       	push	r23
 13a:	8f 93       	push	r24
 13c:	9f 93       	push	r25
 13e:	af 93       	push	r26
 140:	bf 93       	push	r27
 142:	cf 93       	push	r28
 144:	df 93       	push	r29
 146:	ef 93       	push	r30
 148:	ff 93       	push	r31
 14a:	fc b7       	in	r31, 0x3c	; 60
 14c:	ff 93       	push	r31
 14e:	ff b7       	in	r31, 0x3f	; 63
 150:	ff 93       	push	r31
 152:	e0 91 12 06 	lds	r30, 0x0612	; 0x800612 <CurrentP>
 156:	f0 91 13 06 	lds	r31, 0x0613	; 0x800613 <CurrentP+0x1>
 15a:	cd b7       	in	r28, 0x3d	; 61
 15c:	de b7       	in	r29, 0x3e	; 62
 15e:	c1 93       	st	Z+, r28
 160:	d1 93       	st	Z+, r29

00000162 <Exit_Kernel>:
 162:	72 d0       	rcall	.+228    	; 0x248 <Dispatch>
 164:	e0 91 12 06 	lds	r30, 0x0612	; 0x800612 <CurrentP>
 168:	f0 91 13 06 	lds	r31, 0x0613	; 0x800613 <CurrentP+0x1>
 16c:	c1 91       	ld	r28, Z+
 16e:	d1 91       	ld	r29, Z+
 170:	cd bf       	out	0x3d, r28	; 61
 172:	de bf       	out	0x3e, r29	; 62
 174:	ff 91       	pop	r31
 176:	0f bf       	out	0x3f, r16	; 63
 178:	ff 91       	pop	r31
 17a:	0c bf       	out	0x3c, r16	; 60
 17c:	ff 91       	pop	r31
 17e:	ef 91       	pop	r30
 180:	df 91       	pop	r29
 182:	cf 91       	pop	r28
 184:	bf 91       	pop	r27
 186:	af 91       	pop	r26
 188:	9f 91       	pop	r25
 18a:	8f 91       	pop	r24
 18c:	7f 91       	pop	r23
 18e:	6f 91       	pop	r22
 190:	5f 91       	pop	r21
 192:	4f 91       	pop	r20
 194:	3f 91       	pop	r19
 196:	2f 91       	pop	r18
 198:	1f 91       	pop	r17
 19a:	0f 91       	pop	r16
 19c:	ff 90       	pop	r15
 19e:	ef 90       	pop	r14
 1a0:	df 90       	pop	r13
 1a2:	cf 90       	pop	r12
 1a4:	bf 90       	pop	r11
 1a6:	af 90       	pop	r10
 1a8:	9f 90       	pop	r9
 1aa:	8f 90       	pop	r8
 1ac:	7f 90       	pop	r7
 1ae:	6f 90       	pop	r6
 1b0:	5f 90       	pop	r5
 1b2:	4f 90       	pop	r4
 1b4:	3f 90       	pop	r3
 1b6:	2f 90       	pop	r2
 1b8:	1f 90       	pop	r1
 1ba:	0f 90       	pop	r0
 1bc:	18 95       	reti

000001be <Task_Terminate>:
	for(;;);
	//Task_Next();
}

void ISR(TIMER0_COMPA_vect) {
	Task_Next();
 1be:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <KernelActive>
 1c2:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <KernelActive+0x1>
 1c6:	89 2b       	or	r24, r25
 1c8:	49 f0       	breq	.+18     	; 0x1dc <Task_Terminate+0x1e>
 1ca:	f8 94       	cli
 1cc:	e0 91 12 06 	lds	r30, 0x0612	; 0x800612 <CurrentP>
 1d0:	f0 91 13 06 	lds	r31, 0x0613	; 0x800613 <CurrentP+0x1>
 1d4:	ee 5f       	subi	r30, 0xFE	; 254
 1d6:	fe 4f       	sbci	r31, 0xFE	; 254
 1d8:	10 82       	st	Z, r1
 1da:	c3 cf       	rjmp	.-122    	; 0x162 <Exit_Kernel>
 1dc:	08 95       	ret

000001de <Pong>:
 1de:	18 b8       	out	0x08, r1	; 8
 1e0:	78 94       	sei
 1e2:	ff cf       	rjmp	.-2      	; 0x1e2 <Pong+0x4>

000001e4 <Ping>:
 1e4:	8f ef       	ldi	r24, 0xFF	; 255
 1e6:	88 b9       	out	0x08, r24	; 8
 1e8:	78 94       	sei
 1ea:	ff cf       	rjmp	.-2      	; 0x1ea <Ping+0x6>

000001ec <Kernel_Create_Task_At>:
 1ec:	cf 93       	push	r28
 1ee:	df 93       	push	r29
 1f0:	dc 01       	movw	r26, r24
 1f2:	fc 01       	movw	r30, r24
 1f4:	32 96       	adiw	r30, 0x02	; 2
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	91 e0       	ldi	r25, 0x01	; 1
 1fa:	ef 01       	movw	r28, r30
 1fc:	9c 01       	movw	r18, r24
 1fe:	19 92       	st	Y+, r1
 200:	21 50       	subi	r18, 0x01	; 1
 202:	30 40       	sbci	r19, 0x00	; 0
 204:	e1 f7       	brne	.-8      	; 0x1fe <Kernel_Create_Task_At+0x12>
 206:	e1 50       	subi	r30, 0x01	; 1
 208:	ff 4f       	sbci	r31, 0xFF	; 255
 20a:	8f ed       	ldi	r24, 0xDF	; 223
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	80 83       	st	Z, r24
 210:	31 97       	sbiw	r30, 0x01	; 1
 212:	90 83       	st	Z, r25
 214:	31 97       	sbiw	r30, 0x01	; 1
 216:	10 82       	st	Z, r1
 218:	31 97       	sbiw	r30, 0x01	; 1
 21a:	60 83       	st	Z, r22
 21c:	31 97       	sbiw	r30, 0x01	; 1
 21e:	70 83       	st	Z, r23
 220:	31 97       	sbiw	r30, 0x01	; 1
 222:	10 82       	st	Z, r1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	92 93       	st	-Z, r25
 228:	9f 5f       	subi	r25, 0xFF	; 255
 22a:	92 32       	cpi	r25, 0x22	; 34
 22c:	e1 f7       	brne	.-8      	; 0x226 <Kernel_Create_Task_At+0x3a>
 22e:	cd 01       	movw	r24, r26
 230:	87 52       	subi	r24, 0x27	; 39
 232:	9f 4f       	sbci	r25, 0xFF	; 255
 234:	11 96       	adiw	r26, 0x01	; 1
 236:	9c 93       	st	X, r25
 238:	8e 93       	st	-X, r24
 23a:	ae 5f       	subi	r26, 0xFE	; 254
 23c:	be 4f       	sbci	r27, 0xFE	; 254
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	8c 93       	st	X, r24
 242:	df 91       	pop	r29
 244:	cf 91       	pop	r28
 246:	08 95       	ret

00000248 <Dispatch>:
 248:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <NextP>
 24c:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <NextP+0x1>
 250:	fc 01       	movw	r30, r24
 252:	ee 0f       	add	r30, r30
 254:	ff 1f       	adc	r31, r31
 256:	38 2f       	mov	r19, r24
 258:	22 27       	eor	r18, r18
 25a:	e2 0f       	add	r30, r18
 25c:	f3 1f       	adc	r31, r19
 25e:	8e 0f       	add	r24, r30
 260:	9f 1f       	adc	r25, r31
 262:	fc 01       	movw	r30, r24
 264:	e8 5f       	subi	r30, 0xF8	; 248
 266:	fc 4f       	sbci	r31, 0xFC	; 252
 268:	80 81       	ld	r24, Z
 26a:	81 30       	cpi	r24, 0x01	; 1
 26c:	f1 f0       	breq	.+60     	; 0x2aa <Dispatch+0x62>
 26e:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <NextP>
 272:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <NextP+0x1>
 276:	01 96       	adiw	r24, 0x01	; 1
 278:	83 70       	andi	r24, 0x03	; 3
 27a:	99 27       	eor	r25, r25
 27c:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <NextP+0x1>
 280:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <NextP>
 284:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <NextP>
 288:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <NextP+0x1>
 28c:	fc 01       	movw	r30, r24
 28e:	ee 0f       	add	r30, r30
 290:	ff 1f       	adc	r31, r31
 292:	38 2f       	mov	r19, r24
 294:	22 27       	eor	r18, r18
 296:	e2 0f       	add	r30, r18
 298:	f3 1f       	adc	r31, r19
 29a:	8e 0f       	add	r24, r30
 29c:	9f 1f       	adc	r25, r31
 29e:	fc 01       	movw	r30, r24
 2a0:	e8 5f       	subi	r30, 0xF8	; 248
 2a2:	fc 4f       	sbci	r31, 0xFC	; 252
 2a4:	80 81       	ld	r24, Z
 2a6:	81 30       	cpi	r24, 0x01	; 1
 2a8:	11 f7       	brne	.-60     	; 0x26e <Dispatch+0x26>
 2aa:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <NextP>
 2ae:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <NextP+0x1>
 2b2:	ac 01       	movw	r20, r24
 2b4:	44 0f       	add	r20, r20
 2b6:	55 1f       	adc	r21, r21
 2b8:	38 2f       	mov	r19, r24
 2ba:	22 27       	eor	r18, r18
 2bc:	24 0f       	add	r18, r20
 2be:	35 1f       	adc	r19, r21
 2c0:	82 0f       	add	r24, r18
 2c2:	93 1f       	adc	r25, r19
 2c4:	8a 5f       	subi	r24, 0xFA	; 250
 2c6:	9d 4f       	sbci	r25, 0xFD	; 253
 2c8:	90 93 13 06 	sts	0x0613, r25	; 0x800613 <CurrentP+0x1>
 2cc:	80 93 12 06 	sts	0x0612, r24	; 0x800612 <CurrentP>
 2d0:	fc 01       	movw	r30, r24
 2d2:	ee 5f       	subi	r30, 0xFE	; 254
 2d4:	fe 4f       	sbci	r31, 0xFE	; 254
 2d6:	22 e0       	ldi	r18, 0x02	; 2
 2d8:	20 83       	st	Z, r18
 2da:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <NextP>
 2de:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <NextP+0x1>
 2e2:	01 96       	adiw	r24, 0x01	; 1
 2e4:	83 70       	andi	r24, 0x03	; 3
 2e6:	99 27       	eor	r25, r25
 2e8:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <NextP+0x1>
 2ec:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <NextP>
 2f0:	08 95       	ret

000002f2 <OS_Init>:
 2f2:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <_edata+0x1>
 2f6:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <_edata>
 2fa:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <KernelActive+0x1>
 2fe:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <KernelActive>
 302:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <NextP+0x1>
 306:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <NextP>
 30a:	e6 e0       	ldi	r30, 0x06	; 6
 30c:	f2 e0       	ldi	r31, 0x02	; 2
 30e:	22 e1       	ldi	r18, 0x12	; 18
 310:	36 e0       	ldi	r19, 0x06	; 6
 312:	83 e0       	ldi	r24, 0x03	; 3
 314:	91 e0       	ldi	r25, 0x01	; 1
 316:	df 01       	movw	r26, r30
 318:	ac 01       	movw	r20, r24
 31a:	1d 92       	st	X+, r1
 31c:	41 50       	subi	r20, 0x01	; 1
 31e:	50 40       	sbci	r21, 0x00	; 0
 320:	e1 f7       	brne	.-8      	; 0x31a <OS_Init+0x28>
 322:	df 01       	movw	r26, r30
 324:	ae 5f       	subi	r26, 0xFE	; 254
 326:	be 4f       	sbci	r27, 0xFE	; 254
 328:	1c 92       	st	X, r1
 32a:	ed 5f       	subi	r30, 0xFD	; 253
 32c:	fe 4f       	sbci	r31, 0xFE	; 254
 32e:	e2 17       	cp	r30, r18
 330:	f3 07       	cpc	r31, r19
 332:	89 f7       	brne	.-30     	; 0x316 <OS_Init+0x24>
 334:	08 95       	ret

00000336 <OS_Start>:
 336:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <KernelActive>
 33a:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <KernelActive+0x1>
 33e:	89 2b       	or	r24, r25
 340:	71 f4       	brne	.+28     	; 0x35e <OS_Start+0x28>
 342:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_edata>
 346:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <_edata+0x1>
 34a:	89 2b       	or	r24, r25
 34c:	41 f0       	breq	.+16     	; 0x35e <OS_Start+0x28>
 34e:	f8 94       	cli
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <KernelActive+0x1>
 358:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <KernelActive>
 35c:	02 cf       	rjmp	.-508    	; 0x162 <Exit_Kernel>
 35e:	08 95       	ret

00000360 <Task_Create>:
 360:	f8 94       	cli
 362:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <_edata>
 366:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <_edata+0x1>
 36a:	24 30       	cpi	r18, 0x04	; 4
 36c:	31 05       	cpc	r19, r1
 36e:	a1 f1       	breq	.+104    	; 0x3d8 <Task_Create+0x78>
 370:	20 91 08 03 	lds	r18, 0x0308	; 0x800308 <Process+0x102>
 374:	22 23       	and	r18, r18
 376:	a9 f0       	breq	.+42     	; 0x3a2 <Task_Create+0x42>
 378:	20 91 0b 04 	lds	r18, 0x040B	; 0x80040b <Process+0x205>
 37c:	22 23       	and	r18, r18
 37e:	59 f0       	breq	.+22     	; 0x396 <Task_Create+0x36>
 380:	20 91 0e 05 	lds	r18, 0x050E	; 0x80050e <Process+0x308>
 384:	22 23       	and	r18, r18
 386:	51 f0       	breq	.+20     	; 0x39c <Task_Create+0x3c>
 388:	20 91 11 06 	lds	r18, 0x0611	; 0x800611 <Process+0x40b>
 38c:	21 11       	cpse	r18, r1
 38e:	0c c0       	rjmp	.+24     	; 0x3a8 <Task_Create+0x48>
 390:	23 e0       	ldi	r18, 0x03	; 3
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	0b c0       	rjmp	.+22     	; 0x3ac <Task_Create+0x4c>
 396:	21 e0       	ldi	r18, 0x01	; 1
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	08 c0       	rjmp	.+16     	; 0x3ac <Task_Create+0x4c>
 39c:	22 e0       	ldi	r18, 0x02	; 2
 39e:	30 e0       	ldi	r19, 0x00	; 0
 3a0:	05 c0       	rjmp	.+10     	; 0x3ac <Task_Create+0x4c>
 3a2:	20 e0       	ldi	r18, 0x00	; 0
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <Task_Create+0x4c>
 3a8:	24 e0       	ldi	r18, 0x04	; 4
 3aa:	30 e0       	ldi	r19, 0x00	; 0
 3ac:	bc 01       	movw	r22, r24
 3ae:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_edata>
 3b2:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <_edata+0x1>
 3b6:	01 96       	adiw	r24, 0x01	; 1
 3b8:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
 3bc:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
 3c0:	a9 01       	movw	r20, r18
 3c2:	44 0f       	add	r20, r20
 3c4:	55 1f       	adc	r21, r21
 3c6:	92 2f       	mov	r25, r18
 3c8:	88 27       	eor	r24, r24
 3ca:	84 0f       	add	r24, r20
 3cc:	95 1f       	adc	r25, r21
 3ce:	82 0f       	add	r24, r18
 3d0:	93 1f       	adc	r25, r19
 3d2:	8a 5f       	subi	r24, 0xFA	; 250
 3d4:	9d 4f       	sbci	r25, 0xFD	; 253
 3d6:	0a df       	rcall	.-492    	; 0x1ec <Kernel_Create_Task_At>
 3d8:	78 94       	sei
 3da:	08 95       	ret

000003dc <init>:
 3dc:	8f ef       	ldi	r24, 0xFF	; 255
 3de:	87 b9       	out	0x07, r24	; 7
 3e0:	18 b8       	out	0x08, r1	; 8
 3e2:	08 95       	ret

000003e4 <configureTimer>:
}

void configureTimer() {
	
	Disable_Interrupt();
 3e4:	f8 94       	cli
	
	//set timer0 interrupt at 100 Hz
	TCCR0A = 0;// set entire TCCR0A register to 0
 3e6:	14 bc       	out	0x24, r1	; 36
	TCCR0B = 0;// same for TCCR0B
 3e8:	15 bc       	out	0x25, r1	; 37
	TCNT0  = 0;//initialize counter value to 0
 3ea:	16 bc       	out	0x26, r1	; 38
	// set compare match register for 100 hz increments
	OCR0A = 155;// = (16*10^6) / (100*1024) - 1 (must be <256)
 3ec:	8b e9       	ldi	r24, 0x9B	; 155
 3ee:	87 bd       	out	0x27, r24	; 39
	// turn on CTC mode
	TCCR0A |= (1 << WGM01);
 3f0:	84 b5       	in	r24, 0x24	; 36
 3f2:	82 60       	ori	r24, 0x02	; 2
 3f4:	84 bd       	out	0x24, r24	; 36
	// Set CS01 and CS00 bits for (1 << CS12) | (1 << CS10); prescaler
	TCCR0B |= (1 << CS12) | (1 << CS10);
 3f6:	85 b5       	in	r24, 0x25	; 37
 3f8:	85 60       	ori	r24, 0x05	; 5
 3fa:	85 bd       	out	0x25, r24	; 37
	// enable timer compare interrupt
	TIMSK0 |= (1 << OCIE0A);
 3fc:	ee e6       	ldi	r30, 0x6E	; 110
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	80 81       	ld	r24, Z
 402:	82 60       	ori	r24, 0x02	; 2
 404:	80 83       	st	Z, r24

	Enable_Interrupt();
 406:	78 94       	sei
 408:	08 95       	ret

0000040a <main>:
* This function creates two cooperative tasks, "Ping" and "Pong". Both
* will run forever.
*/
int main()
{
	Disable_Interrupt();
 40a:	f8 94       	cli
	configureTimer();
 40c:	eb df       	rcall	.-42     	; 0x3e4 <configureTimer>
	init();
 40e:	e6 df       	rcall	.-52     	; 0x3dc <init>
	OS_Init();
 410:	70 df       	rcall	.-288    	; 0x2f2 <OS_Init>
	Task_Create( Ping );
 412:	82 ef       	ldi	r24, 0xF2	; 242
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	a4 df       	rcall	.-184    	; 0x360 <Task_Create>
	Task_Create( Pong );
 418:	8f ee       	ldi	r24, 0xEF	; 239
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	a1 df       	rcall	.-190    	; 0x360 <Task_Create>
	Enable_Interrupt();
 41e:	78 94       	sei
	OS_Start();
 420:	8a df       	rcall	.-236    	; 0x336 <OS_Start>
 422:	80 e0       	ldi	r24, 0x00	; 0

}
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	08 95       	ret

00000428 <_exit>:
 428:	f8 94       	cli

0000042a <__stop_program>:
 42a:	ff cf       	rjmp	.-2      	; 0x42a <__stop_program>
